apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: sugar9-openshift-template
parameters:
  - name: PROJECT_NAME 
    displayName: Inserisci il nome del progetto 
    required: true 
  - name: DATABASE_VOLUME_CAPACITY
    displayName: Mysql Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    value: 1Gi
    required: true
  - name: WEB_VOLUME_CAPACITY
    displayName: Web Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    value: 1Gi
    required: true

objects: 


- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: sugar9-html
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${WEB_VOLUME_CAPACITY}"

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: sugar9-mysql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${DATABASE_VOLUME_CAPACITY}"

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: web
    namespace: "${PROJECT_NAME}"
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: '1.8'
        from:
          kind: DockerImage
          name: 'stefanos87/sugar9-apache-php:1.8'
        generation: 2
        importPolicy: {}
        referencePolicy:
          type: Source

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: db
    namespace: "${PROJECT_NAME}"
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: '1.0'
        from:
          kind: DockerImage
          name: 'stefanos87/sugar9mysql57:1.0'
        generation: 2
        importPolicy: {}
        referencePolicy:
          type: Source

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: elasticsearch
    namespace: "${PROJECT_NAME}"
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: 5.6.7
        from:
          kind: DockerImage
          name: 'elasticsearch:5.6.7'
        generation: 2
        importPolicy: {}
        referencePolicy:
          type: Source

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: cron
    namespace: "${PROJECT_NAME}"
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: '1.0'
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
          openshift.io/imported-from: 'stefanos87/sugar9cron:1.0'
        from:
          kind: DockerImage
          name: 'stefanos87/sugar9cron:1.0'
        generation: 2
        importPolicy: {}
        referencePolicy:
          type: Source

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: web
    namespace: "${PROJECT_NAME}"
    labels:
      app: web
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: web
      app.kubernetes.io/part-of: "${PROJECT_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - web
          from:
            kind: ImageStreamTag
      
            name: 'web:1.8'
          lastTriggeredImage: 
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: web
      deploymentconfig: web
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: web
          deploymentconfig: web
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
        - name: sugar9-html
          persistentVolumeClaim:
            claimName: sugar9-html
        containers:
          - name: web
            image: 
            ports:
              - containerPort: 80
                protocol: TCP
              - containerPort: 8080
                protocol: TCP
            resources: {}
            volumeMounts:
            - name: sugar9-html
              mountPath: "/var/www/html"
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: elasticsearch
    namespace: "${PROJECT_NAME}"
    labels:
      app: elasticsearch
      app.kubernetes.io/component: elasticsearch
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/part-of: "${PROJECT_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - elasticsearch
          from:
            kind: ImageStreamTag
      
            name: 'elasticsearch:5.6.7'
          lastTriggeredImage:
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: elasticsearch
      deploymentconfig: elasticsearch
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
          deploymentconfig: elasticsearch
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
          - name: elasticsearch-1
            emptyDir: {}
        containers:
          - name: elasticsearch
            image:
            ports:
              - containerPort: 9200
                protocol: TCP
              - containerPort: 9300
                protocol: TCP
            resources: {}
            volumeMounts:
              - name: elasticsearch-1
                mountPath: /usr/share/elasticsearch/data
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: db
    namespace: "${PROJECT_NAME}"
    labels:
      app: db
      app.kubernetes.io/component: db
      app.kubernetes.io/instance: db
      app.kubernetes.io/part-of: "${PROJECT_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - db
          from:
            kind: ImageStreamTag
      
            name: 'db:1.0'
          lastTriggeredImage:
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: db
      deploymentconfig: db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: db
          deploymentconfig: db
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
        - name: sugar9-mysql
          persistentVolumeClaim:
            claimName: sugar9-mysql
        containers:
          - name: db
            image:
            ports:
              - containerPort: 3306
                protocol: TCP
              - containerPort: 33060
                protocol: TCP
            resources: {}
            volumeMounts:
            - name: sugar9-mysql
              mountPath: "/var/lib/mysql"
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: cron
    namespace: "${PROJECT_NAME}"
    labels:
      app: cron
      app.kubernetes.io/component: cron
      app.kubernetes.io/instance: cron
      app.kubernetes.io/part-of: "${PROJECT_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - cron
          from:
            kind: ImageStreamTag
      
            name: 'cron:1.0'
          lastTriggeredImage:
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: cron
      deploymentconfig: cron
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cron
          deploymentconfig: cron
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
        - name: sugar9-html
          persistentVolumeClaim:
            claimName: sugar9-html
        containers:
          - name: cron
            image:
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            volumeMounts:
            - name: sugar9-html
              mountPath: "/var/www/html"
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
  
- kind: Service
  apiVersion: v1
  metadata:
    name: cron
    namespace: "${PROJECT_NAME}"
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: cron
      deploymentconfig: cron
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: Service
  apiVersion: v1
  metadata:
    name: db
    namespace: "${PROJECT_NAME}"
  spec:
    ports:
      - name: 3306-tcp
        protocol: TCP
        port: 3306
        targetPort: 3306
      - name: 33060-tcp
        protocol: TCP
        port: 33060
        targetPort: 33060
    selector:
      app: db
      deploymentconfig: db
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: Service
  apiVersion: v1
  metadata:
    name: elasticsearch
    namespace: "${PROJECT_NAME}"
  spec:
    ports:
      - name: 9200-tcp
        protocol: TCP
        port: 9200
        targetPort: 9200
      - name: 9300-tcp
        protocol: TCP
        port: 9300
        targetPort: 9300
    selector:
      app: elasticsearch
      deploymentconfig: elasticsearch
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: Service
  apiVersion: v1
  metadata:
    name: web
    namespace: "${PROJECT_NAME}"
  spec:
    ports:
      - name: 80-tcp
        protocol: TCP
        port: 80
        targetPort: 80
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      app: web
      deploymentconfig: web
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: web
    namespace: "${PROJECT_NAME}"
  spec:
    host: 
    subdomain: ''
    to:
      kind: Service
      name: web
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None
  status:
    ingress:
      - host: 
        routerName: default
        conditions:
          - type: Admitted
            status: 'True'
            lastTransitionTime: '2019-10-22T11:28:10Z'
        wildcardPolicy: None
        routerCanonicalHostname: apps-crc.testing







